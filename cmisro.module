<?php
/**
 * @copyright 2014-2015 City of Bloomington, Indiana
 * @license http://www.gnu.org/licenses/agpl.txt GNU/AGPL, see LICENSE.txt
 *
 * This module is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 2 of the License, or
 * (at your option) any later version.
 *
 * This module is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
include __DIR__.'/cmisro-api.php';
include __DIR__.'/cmisro-fields.php';

function cmisro_libraries_info()
{
    return ['chemistry' => [
        'name'             => 'COB Fork of Chemistry PHP CMIS library',
        'vendor url'       => 'http://github.com/City-of-Bloomington/chemistry-phpclient',
        'download url'     => 'http://github.com/City-of-Bloomington/chemistry-phpclient',
        'files' => [
            'php' => [
                'browser/cmis_service.php'
            ]
        ],
        'version callback' => 'cmisro_chemistry_version_check',
    ]];
}
function cmisro_chemistry_version_check()
{
    // Right now, we do not care about versions.
    // Any version of the Chemistry fork from COB will do
    return true;
}

function cmisro_admin_form()
{
	return system_settings_form([
		'cmisro_url' => [
			'#type'          => 'textfield',
			'#default_value' => variable_get('cmisro_url'),
			'#title'         => 'CMIS Repository URL',
			'#description'   => 'Your CMIS 1.1 browser binding repository URL.  This should be the URL to the JSON interface',
			'#required'      => true
		],
        'cmisro_repositoryId' => [
            '#type'          => 'textfield',
            '#default_value' => variable_get('cmisro_repositoryId'),
            '#title'         => 'CMIS Repository ID',
            '#description'   => 'The ID of your CMIS repository.',
            '#required'      => true
        ],
		'cmisro_username' => [
			'#type'          => 'textfield',
			'#default_value' => variable_get('cmisro_username'),
			'#title'         => 'CMIS Username',
			'#description'   => 'A username that should have read-only access to your CMIS server',
			'#required'      => true
		],
		'cmisro_password' => [
			'#type'          => 'textfield',
			'#default_value' => variable_get('cmisro_password'),
			'#title'         => 'CMIS Password',
			'#description'   => 'The password for the read-only account on your CMIS server',
			'#required'      => true
		]
	]);
}

/**
 * Verifies the connection to CKAN
 *
 * @implements hook_admin_validate()
 */
function cmisro_admin_form_validate($form, &$form_state)
{
	if (   !empty($form_state['values']['cmisro_url'])
		&& !empty($form_state['values']['cmisro_username'])
		&& !empty($form_state['values']['cmisro_password'])
		&& !empty($form_state['values']['cmisro_repositoryId'])) {

        libraries_load('chemistry');

		try {
			$service = new CMISService(
				$form_state['values']['cmisro_url'],
				$form_state['values']['cmisro_username'],
				$form_state['values']['cmisro_password'],
				$form_state['values']['cmisro_repositoryId']
			);
		}
		catch (Exception $e) {
			form_set_error('cmisro_url', 'Cannot connect to CMIS server.  Make sure the URL is valid.');
		}
	}
}

function cmisro_menu()
{
	return [
		'admin/config/services/cmisro' => [
			'title'           => 'CMIS settings',
			'description'     => 'Settings for the read-only CMIS module',
			'page callback'   => 'drupal_get_form',
			'page arguments'  => ['cmisro_admin_form'],
			'access arguments'=> ['administer site configuration'],
			'type'            => MENU_NORMAL_ITEM
		],
		'cmisro/download/%' => [
			'page callback'    => '_cmisro_download',
			'page arguments'   => [2],
			'access arguments' => ['access content']
		],
		'cmisro/browser' => [
			'page callback'    => '_cmisro_browser',
			'access callback'  => 'user_access',
			'access arguments' => ['access content'],
		],
        'cmisro/%node/%' => [
            'title callback'   => 'cmisro_directorylisting_title',
            'title arguments'  => [1],
            'description'      => 'Browsable directory listing from Alfresco.',
            'page callback'    => 'cmisro_directorylisting',
            'page arguments'   => [1, 2],
            'access arguments' => ['access content']
        ],
	];
}

function cmisro_directorylisting_title($node)
{
    return $node->title;
}

/**
 * @param array  $node    Current drupal page node
 * @param string $basedir Folder ID for base direcotory
 * @param string $subdir  Folder ID for subdirectory
 */
function cmisro_directorylisting($node, $basedir, $subdir=null)
{
    try {
        $base        = _cmisro_getObject($basedir);
        $directories = _cmisro_getSubFolders($base['id']);

        if ($subdir) {
            $sub       = _cmisro_getObject($subdir);
            $documents = _cmisro_getFolderItems($sub['id']);
        }
        else {
            $sub = null;
            $documents = _cmisro_getFolderItems($base['id']);
        }

        foreach ($documents as $i=>$o) {
            if ($o['type'] === 'cmis:folder') { unset($documents[$i]); }
        }

        return theme('cmisro_directorylisting', [
            'basedir'    => $base,
            'subdir'     => $sub,
            'directories'=> $directories,
            'documents'  => $documents,
            'node'       => $node
        ]);
    }
    catch (\Exception $e) {
        print_r($e);
    }
}


/**
 * @implements hook_theme()
 * @see https://api.drupal.org/api/drupal/modules!system!system.api.php/function/hook_theme/7
 */
function cmisro_theme($existing, $type, $theme, $path)
{
    $path = drupal_get_path('module', 'cmisro') . '/templates';

	return [
        'cmisro_popup' => [
            'template'  => 'cmisro-popup',
            'path'      => $path
        ],
		'cmisro_browser' => [
			'variables' => ['current_directory' => null, 'listing' => null],
			'template'  => 'cmisro-browser',
			'path'      => $path
		],
		'cmisro_breadcrumbs' => [
            'variables' => ['object' => null],
            'template'  => 'cmisro-breadcrumbs',
            'path'      => $path
		],
		'cmisro_reference' => [
            'variables' => ['reference' => null],
            'function'  => 'cmisro_reference_html'
		],
		'cmisro_item' => [
            'variables' => ['object' => null],
            'template'  => 'cmisro-item',
            'path'      => $path
		],
		'cmisro_list' => [
            'variables' => ['list' => null, 'title' => null],
            'template'  => 'cmisro-list',
            'path'      => $path
		],
		'cmisro_directorylisting' => [
            'template'  => 'cmisro-directorylisting',
            'path'      => $path,
            'variables' => [
                'basedir'     => null,
                'subdir'      => null,
                'directories' => null,
                'documents'   => null,
                'node'        => null
            ]
		]
	];
}

/**
 * Handles rendering html for any type of CMIS reference
 *
 * @return string
 */
function cmisro_reference_html($variables)
{
    $html = '';
    if (_cmisro_referenceType($variables['reference']) === 'query') {
        // @TODO need to implement queries
    }
    else {
        $o = _cmisro_getObject($variables['reference']);
        if ($o['type'] === 'cmis:folder') {
            $list = _cmisro_getFolderItems($o['id']);
            $html = theme('cmisro_list', ['list'=>$list, 'title'=>$o['title']]);
        }
        else {
            $html = theme('cmisro_item', ['object'=>$o]);
        }
    }
    return $html;
}

/**
 * Displays the contents of any given folder on the CMIS Server
 *
 * @param string $_GET[ref] The folder's path or objectId
 */
function _cmisro_browser()
{
    $service = _cmisro_service();

	$reference =  !empty($_GET['ref']) ? $_GET['ref'] : '/';
	$o = _cmisro_getObject($reference);

    $page    = pager_find_page();
    $offset  = $service->maxItems * $page;
    $listing = _cmisro_getFolderItems($reference, $offset);

    if (!empty($_GET['popup'])) {
        echo   theme('cmisro_popup',   ['current_directory'=>$o, 'listing' => $listing]);
    }
    else {
        return theme('cmisro_browser', ['current_directory'=>$o, 'listing' => $listing]);
    }
}

/**
 * @implements hook_filter_info()
 * @see https://api.drupal.org/api/drupal/modules%21filter%21filter.api.php/function/hook_filter_info/7
 */
function cmisro_filter_info()
{
	return [
		'cmisro_links' => [
            'title'            => 'CMIS Links',
            'description'      => 'Allows linking to CMIS content in a wiki syntax',
            'process callback' => 'cmisro_links_filter'
		]
	];
}

/**
 * @implements callback_filter_process()
 * @see https://api.drupal.org/api/drupal/modules!filter!filter.api.php/function/callback_filter_process/7
 */
function cmisro_links_filter($text, $filter, $format, $langcode, $cache, $cache_id)
{
    return preg_replace_callback(
        '/\{([a-f0-9\-]{36})\}/',
        function ($matches) {
            try {
                return theme('cmisro_reference', ['reference'=>$matches[1]]);
            }
            catch (\Exception $e) {
                return $matches[0];
            }
        },
        $text
    );
}
